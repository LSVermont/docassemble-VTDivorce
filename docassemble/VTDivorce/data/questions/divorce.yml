#For this interview, the person filling out the form (user) is always considered to be the plaintiff.
#The health record yml file is included in this package because it will never be a stand-alone interview.
#We will be "including" other stand-alone interviews.
---
objects:
  - all_courts: ALCourtLoader.using(file_name='courts_list.xlsx')
---
code: |
  trial_court = all_courts.as_court('trial_court', trial_court_index)
  trial_court.geolocate()  

---
include:
  - docassemble.AssemblyLine:assembly_line.yml
  - docassemble.ALToolbox:phone-number-validation.yml
  - docassemble.VTSharedYMLFile:VTSharedYMLFile.yml
  - Health_record.yml
  - docassemble.VTCertificateOfService:VTCertificateOfService_to_include.yml
  - docassemble.VTFamilyCourtInfoSheet:family_court_info_sheet_to_include.yml
  - docassemble.VTNoticeOfAppearance:VTNoticeOfAppearance_to_include.yml
  - customized_screens.yml
---
#This code added temporarily so people can test it on vtcourtforms and see the screen id numbers
default screen parts:
  pre: |
    % if not url_args.get("hide_hud", "").lower() in ["1", "on", "true", "yes"]:
    `id: ${ user_info().question_id }`[BR]
    `Variable: ${ user_info().variable }`[BR]
    `Version: ${ user_info().package.replace("docassemble.", "") + " " if not user_info().package.startswith("docassemble.playground") else "" }${ package_version_number }; ${ al_version }`
    % endif
---
#modules:
  #- docassemble.demo.accordion
---
# customized feedback form
code: |   
  feedback_form = "docassemble.VTFeedback:VTfeedback.yml"
---
metadata:
  title: >-
    Divorce / separation / dissolution
  short title: >-
    Divorce
  description: |-
    This interview helps someone in Vermont ask the court for a divorce, separation, or civil union dissolution. Based on paper versions of divorce complaint forms 400-00836Children (06/2023) and 400-00836NoChildren (02/2022), and health department forms VDH-VR-DISS-2/2007 and VDH-VR-DIV-9/2009.
  tags:
    - "FA-00-00-00-00"
  authors:
    - K. Surette, Legal Services Vermont
    - Q. Steenhuis, M. Bonardi and S. Constantinou, Lemma Legal
  original_form:
    - https://vtlawhelp.org/roadmap/divorce/step-3
  typical_role: "plaintiff"
  al_weaver_version: "1.10.1"
  generated_on: "2023-07-25"
---
code: |
  interview_short_title = "Ask the court for a divorce, legal separation or civil union dissolution"
---
code: |
  al_form_type = "starts_case" 
---
objects:
  - children: ALPeopleList.using(ask_number=True, complete_attribute="complete")
  - locations: ALPeopleList.using(there_are_any=True,complete_attribute="complete") 
  - users: ALPeopleList.using(ask_number=True,target_number=1)
  - other_parties: ALPeopleList.using(ask_number=True,target_number=1,)
  - earlier_actions: DAList.using(object_type=Thing, ask_number=True, complete_attribute='complete')
  - earlier_RFA: DAList.using(object_type=Thing, ask_number=True, complete_attribute='complete')
  - child_custody: ALPeopleList.using(ask_number=True,target_number=1,complete_attribute="complete")
---
sections:
  - intro: Introduction
  - screening: Is this interview right for you
  - about: About you
  - defendant: About the other party
  - kids: About children
  - what_want: What you want in the order
  - past_actions: Other court actions
  - serving_other_side: Serving the other party
  - review_answers: Edit your answers
  - sign: Signature
  - get_docs: Get your documents
---
###################### Main order ######################
mandatory: True
code: |
  al_intro_screen
  
  # run the main interview order block
  interview_order_divorce
  
  # Fields for family court info sheet
  other_family_juv_probate_proceedings
  set_progress(80)
  
  nav.set_section("serving_other_side")
  # Fields for notice of appearance
  users1_role == "role_plaintiff"
  
  set_progress(85)
  # Fields for certificate of service
  users1_role = "role_plaintiff"
  user_has_attorney

  faminfo
  other_documents_to_serve

  set_progress(90)
  for party in other_parties:
    party.served
  other_people_receiving_service.gather()

  # Store anonymous data for analytics / statistics
  store_variables_snapshot(
      persistent=True,
      data={
          "zip": showifdef("users[0].address.zip"),
          "marriage_or_civil_union_VT": showifdef("marriage_or_civil_union_VT"),
          "have_school_age_children": showifdef("have_school_age_children"),
          "reached_interview_end": True,
      },
  )
  nav.set_section("review_answers")
  trial_court.address.county
  divorce_preview_question
  
  nav.set_section("sign")
  signature_date
  set_progress(95)
  al_form_requires_digital_signature = False
  basic_questions_signature_flow    
  nav.set_section("get_docs")
  set_progress(100)
  divorce_download

---
#################### Interview order - divorce #####################
comment: |
  Controls order and branching logic for questions specific to this form
id: interview_order_divorce
code: |
  nav.set_section("intro")
  user_role = "plaintiff"
  #users1_role sets the role for the Notice of Appearance form
  users1_role = "role_plaintiff"
  user_ask_role = "plaintiff"
  nav.set_section("screening")
  plaintiff_VT
  defendant_VT
  if not plaintiff_VT and not defendant_VT:
  
    if not marriage_or_civil_union_VT:
      jurisdiction_kickout
    if not both_cant_divorce_current_state:
      jurisdiction_kickout
    if not have_property_agreement:
      jurisdiction_kickout
    if school_age_kids:
      jurisdiction_kickout
  
  initial_screening_continue 
  
  nav.set_section("about")
    
  license_type

  OCS_filing_form
  #users.gather()
  # fields for health record
  if license_type == "civil_union":
    users[0].sex
  if license_type == "marriage":
    users[0].gender
    users_role
    
  users[0].birthdate
  users[0].address.address
  users[0].daytime_phone_number
  email_consent
  user_has_attorney
  users1_gets_public_assistance

  set_progress(16)
  nav.set_section("defendant")
  #other_parties.gather()
  if license_type == "civil_union":
    other_parties[0].sex
  if license_type == "marriage":
    other_parties[0].gender
  other_parties[0].birthdate
  other_parties[0].address.address
  other_parties1_gets_child_support
  other_parties[0].email
  other_parties_has_attorney
  
  des
  military
  set_progress(32)
  
  nav.set_section("kids")
  if have_school_age_children: 
    children.gather()
    where_children_lived
    locations.gather()
    participations
    child_medical_support
  else: 
    children.target_number = 0
  
  nav.set_section("what_want")
  grant_for
  set_progress(48)
  
  filing_financial_form
  nav.set_section("past_actions")
  if earlier_actions_yes: 
    earlier_actions.gather()
  else: 
    earlier_actions.target_number = 0
    
  if earlier_RFA_yes:
    earlier_RFA.gather()
  else: 
    earlier_RFA.target_number = 0
    
  set_progress(60)

  docket_number
  trial_court

  set_progress(70)
  no_longer_living_together_date
    
  interview_order_divorce = True

---
id: basic questions intro screen
decoration: form-lineal
question: |
  **${interview_short_title} in Vermont**
subquestion: |  

  <p>${ intro_vtcourtforms_3_steps }</p>
  
  <i class="fas fa-file-text fa-2x"></i> This guided interview will produce an initial package of forms needed to ask the court for a divorce, legal separation, or civil union dissolution.
  
  This interview produces the following forms to give to the court:
  
  * Summons and Complaint for a Divorce / Separation / Dissolution - form 400-00836
  * Notice of Appearance for Self-Represented Party - form 400-00831
  * Family Court Information Form - form 800
  * Department of Health Record of Divorce or Dissolution
  
  As well as forms you **might** use to show you sent copies of the forms to your spouse:
  
  * Certificate of Service - form 600-00264
  * (note to testers: we could add the Acceptance of Service form, too, since we will have all the info needed for it) 
  
  <i class="fas fa-clock fa-2x"></i> It may take you over 45 minutes to complete this interview.
  
  <i class="fas fa-circle-info fa-2x"></i> It is free to use this program. This site is not a lawyer.
  
  **Visit our [VTLawHelp.org website](https://vtlawhelp.org/roadmap/divorce/step-1) for step-by-step information about divorce, separation, and civil union dissolution.**

  <p>${ intro_vtcourtforms_created_by }</p>

fields:
  - To continue, please accept our [terms of use](https://vtlawhelp.org/vtcourtforms/terms-of-use).: acknowledged_information_use
    datatype: checkboxes
    none of the above: False    
    minlength: 1
    choices:
      - I accept the terms of use.
    validation messages:
      minlength: |
        You cannot continue unless you agree to the terms of use.        
continue button field: al_intro_screen
---
code: |
  earlier_actions[i].action_type
  earlier_actions[i].complete = True
---
code: |
  earlier_RFA[i].action_type
  earlier_RFA[i].complete = True
---
code: |
  child_custody[i].explanation
  child_custody[i].complete = True
---
id: choose a court
question: |
  Choose a Family Court
fields:
  - note: |
      Choose the county where you will file your forms. 
      
      It can be:
      
      * the county you live in, or
      * the county the other person lives in (the "defendant"), or
      * if you have children with the other person, it should be in the county in which the children spend the most time, or
      * if you had a civil union, it can be the county where your civil union took place. 
    
      
      Not sure what county? [Check this list of cities and towns to find the county.](https://en.m.wikipedia.org/wiki/List_of_municipalities_in_Vermont#Cities)
  - County: trial_court_index
    code: all_courts.county_list(column_name="address_county")
---
id: jurisdiction kickout
question: |
  Stop
subquestion: |
  <i class="fas fa-hand-paper fa-3x" aria-hidden="true"></i> **Stop.** In this situation, these are **not** the right forms to fill out. **Do not use this interview.**
  
  Contact a lawyer or legal aid organization in the state where you live.
  
  If neither of you live in Vermont, a Vermont family court will only take your divorce case if **all these four things are true**:
  
  1. You got married or got a civil union in Vermont
  2. You and your spouse currently live in states where you can't get a divorce or dissolve your civil union
  3. You don't have minor children (under 18), and
  4. You and your spouse already have an agreement about how to deal with your property and debts.
  
  See the [Divorce Roadmap on the VTLawHelp.org website](https://vtlawhelp.org/roadmap/divorce/step-1) to find out what is required for you to be able to file for a divorce, separation or civil union dissolution in Vermont.
  
  [Go to the VTLawHelp.org website.](https://vtlawhelp.org/roadmap/divorce/step-1)
continue button field: jurisdiction_kickout
buttons:
  - DELETE your answers and go to the VTLawHelp website: exit
    url: https://vtlawhelp.org/roadmap/divorce/step-1
---
id: marriage or civil union
question: |
  Are you asking to end a marriage or end a civil union?
fields:
  - no label: license_type
    input type: radio
    choices: 
      - Marriage: marriage
      - Civil Union: civil_union
  - Marriage city: marriage_city
    show if: 
      variable: license_type
      is: marriage
  - Marriage state: marriage_state
    code: |
      states_list()
    default: VT
    show if: 
      variable: license_type
      is: marriage
  - Marriage date: marriage_date
    datatype: date
    show if: 
      variable: license_type
      is: marriage
  - Civil Union city: civil_union_city
    show if: 
      variable: license_type
      is: civil_union
  - Civil Union state: civil_union_state
    code: |
      states_list()
    default: VT
    show if: 
      variable: license_type
      is: civil_union
  - Civil Union date: civil_union_date
    datatype: date
    show if: 
      variable: license_type
      is: civil_union
---
id: plaintiff VT 6 months
question: |
  See if this interview is right for your situation
subquestion: |
  Have you lived in Vermont since ${ today().minus(months=6) }?
fields:
  - note: |
      ${ collapse_template(asterisk) }
  - no label: plaintiff_VT
    datatype: yesnoradio
  - Date you moved to Vermont: date_plaintiff_moved_to_VT
    datatype: date
    show if: plaintiff_VT
validation code: |
  if plaintiff_VT and date_plaintiff_moved_to_VT >= today().minus(months=6):
    validation_error("To get a divorce in Vermont, this date needs to be 6 months ago or more.", field="date_plaintiff_moved_to_VT")    
---
id: defendant VT 6 months
question: |
  See if this interview is right for your situation
subquestion: |
  Has your spouse lived in Vermont since ${ today().minus(months=6) }?
fields:
  - no label: defendant_VT
    datatype: yesnoradio
  - Date they moved to Vermont: date_defendant_moved_to_VT
    datatype: date  
    show if: defendant_VT
validation code: |
  if defendant_VT and date_defendant_moved_to_VT >= today().minus(months=6):
    validation_error("To get a divorce in Vermont, this date needs to be 6 months ago or more.", field="date_defendant_moved_to_VT")
---
id: marriage_or_civil_union_VT
question: |
  See if this interview is right for your situation
subquestion: |
  Did you and your spouse get your marriage or civil union in Vermont?
fields:
  - no label: marriage_or_civil_union_VT
    datatype: yesnoradio
---
id: both_cant_divorce_current_state
question: |
  See if this interview is right for your situation
subquestion: |
  Do you and your spouse currently live in states where you can't get a divorce or dissolve your civil union?
fields:
  - no label: both_cant_divorce_current_state
    datatype: yesnoradio
---
id: screen for school age kids
question: |
  Have kids?
subquestion: |  
  Do you and your spouse/other party have children together who are either younger than 18 years old, or are 18 years old and still in high school? Include born or adopted children.  
fields:
  - no label: school_age_kids
    datatype: yesnoradio

---
id: property agreement
question: |
  See if this interview is right for your situation
subquestion: |
  Do you and your spouse already have an agreement about how to deal with your property and debts?
fields:
  - no label: have_property_agreement
    datatype: yesnoradio
    
---
id: initial_screening_continue
question: |
  Continue
subquestion: |
  <i class="fas fa-check fa-3x" style="color: #429a3c;" aria-hidden="true"></i>  Yes, you can use this interview to fill out these forms. 
  
  Keep in mind, you can edit your answers after you preview the finished forms. You can also do that anytime by choosing Edit Your Answers in the Menu at the top-right of the page.
  
  You can also go to the Menu and quickly Exit and Delete Your Answers if you need to. And, you may choose to make a free account so you can store your answers online and come back to them later.
  
  Let's get started.
continue button field: initial_screening_continue
buttons:
  - Start the interview: continue
---
id: have school age children
question: |
  Children
subquestion: |  
  Do you and ${ other_parties[0].name } have children together who are either younger than 18 years old, or are 18 years old and still in high school? Include born or adopted children.  
fields:
  - no label: have_school_age_children
    datatype: yesnoradio
  - How many?: children.target_number
    datatype: integer
    min: 1
    max: 20
    show if: have_school_age_children
---  
code: |
  children[i].name.first
  children[i].birthdate
  children[i].complete = True 
---
id: minor children
sets:
  - children[0].name.first
  - children[0].name.last
  - children[0].name.middle
  - children[0].name.suffix
question: |
  % if hasattr(children, 'ask_number') and children.ask_number and children.target_number == 1:
  Child's name
  % else:
  Name of first child
  % endif
fields:
  - code: |
      children[0].name_fields()
---
id: minor children dob
question: |
  What is ${children[i].name}'s date of birth?
fields:
  - Birthdate: children[i].birthdate
    datatype: Birthdate
---
code: |
  locations[i].housemates
  locations[i].complete = True
---
id: instructions for where children lived
question: |
  Where have your children lived in the past 5 years, and who did they live with?
subquestion: |
  On the next screen, start with the most recent address. You'll be able to add other addresses as needed.
  
  Tip: It's OK to estimate the dates.
  
  If children have lived at different addresses from each other, enter the addresses for each child.
continue button field: where_children_lived
---
id: children location information
sets:
  - locations[i].address.address
  - locations[i].address.unit
  - locations[i].address.city
  - locations[i].address.state
question: |
  Where have they lived?
fields:      
  - Address: locations[i].address
    datatype: object_radio
    choices:
      - users[0].address if defined("users[0].address.address") else None
    object labeler: |
      lambda y: y.on_one_line()
    none of the above: |
      Somewhere else
    default: users[0].address
    disable others: 
      - locations[i].address.address
      - locations[i].address.unit
      - locations[i].address.city
      - locations[i].address.state
  - ${ users[0].address.address_label}: locations[i].address.address
    address autocomplete: True
  - ${ users[0].address.unit_label}: locations[i].address.unit
    required: False
  - ${ users[0].address.city_label}: locations[i].address.city
  - ${ users[0].address.state_label}: locations[i].address.state
    code: |
      states_list(country_code=AL_DEFAULT_COUNTRY)
    default: ${ AL_DEFAULT_STATE }  


  - Start date: locations[i].start_date
    maxlength: 10
  - End date (or today's date): locations[i].end_date 
    maxlength: 10
  - All people that lived with your child/children (including you): locations[i].housemates
    maxlength: 30
  - note: |
      You can say things like: mom, dad, step-brother, grandma. You can also use abbreviated names for the people who lived with them, like Jane D. (There's not much room on the form!)
---
generic object: ALPeopleList
id: any other locations
question: |
  Do you have any other locations to tell us about?
subquestion: |
  The court needs to know where they lived over the last 5 years.
fields:
  - no label: locations.there_is_another
    datatype: yesnoradio
---
id: child custody cases
question: |
  Custody
subquestion: |  
  Check all statements that apply to you.
fields: 
  - "I have participated as a party, witness, or in some other way in a court case about the custody of this child or these children in Vermont or another state.": participations
    label above field: True
    datatype: yesno
  
  - Please briefly explain: child_custody[0].explanation
    show if: participations
    input type: area
    maxlength: 300
  
  - "I have information about a case concerning this child or these children that is now pending in a Vermont court or a court in another state.": information
    label above field: True
    datatype: yesno
    
  - Please briefly explain: child_custody[1].explanation
    show if: information
    input type: area
    maxlength: 300
    
  - "I have knowledge about a person who is not a party to this case who has physical custody of this child or these children or who claims to have custody of or visitation rights to this child or these children.": knowledge
    label above field: True
    datatype: yesno
   
  - Please briefly explain: child_custody[2].explanation
    show if: knowledge
    input type: area
    maxlength: 300

  - "None of the above": custody_none_apply
    label above field: True
    datatype: yesno
--- 
id: earlier actions
question: |
  Past court actions
subquestion:
  Have you or ${ other_parties[0].name } filed for **divorce, legal separation, dissolution or annulment BEFORE** filing this form? 
fields:
  - no label: earlier_actions_yes
    datatype: yesnoradio
  - How many of these actions were filed?: earlier_actions.target_number
    datatype: integer
    min: 1
    show if: earlier_actions_yes
---
id: earlier RFA actions
question: |
  Past court actions
subquestion:
  Have either you or ${ other_parties[0].name } filed a complaint for **relief from abuse (RFA) or a request for a protective order** against each other?
fields:
  - no label: earlier_RFA_yes
    datatype: yesnoradio
  - How many of these actions were filed?: earlier_RFA.target_number
    datatype: integer
    min: 1
    show if: earlier_RFA_yes
---
id: collect earlier actions
generic object: DAList
question: |
  % if hasattr(earlier_actions, 'ask_number') and earlier_actions.ask_number and earlier_actions.target_number == 1:
  Tell us about what was filed
  % else:
  Tell us about the **${ ordinal(i) }** action
  % endif
subquestion: |
  If you got a court order, attach a copy of it to the forms that you file with the court.
fields:
  - Type of action: earlier_actions[i].action_type
    datatype: radio
    choices: 
      - Divorce
      - Legal separation
      - Dissolution
      - Annulment
  - Who filed it?: earlier_actions[i].who_filed
    datatype: object_radio
    choices:
      - users
      - other_parties
  - In what court, county and state? Example -- Family, Orleans, VT: earlier_actions[i].where_filed
  - In what year?: earlier_actions[i].year_filed
---
id: collect earlier RFA actions
generic object: DAList
question: |
  % if hasattr(earlier_RFA, 'ask_number') and earlier_RFA.ask_number and earlier_RFA.target_number == 1:
  Tell us about what was filed
  % else:
  Tell us about the **${ ordinal(i) }** action
  % endif
subquestion: |
  If you got a court order, attach a copy of it to the forms that you file with the court.
  
  Note: If you have experienced domestic violence or abuse, you can call us to ask for advice about safely getting a divorce, separation or dissolution. Find out how to [get help from Legal Services Vermont and Vermont Legal Aid.](https://vtlawhelp.org/victims-of-crime) You can save your progress in this program by creating a free account. Choose “sign up” in the menu at the top of the VTCourtForms pages, or “register” at the bottom.
  
fields:
  - Type of action: earlier_RFA[i].action_type
    datatype: radio
    choices: 
      - Relief from abuse order
      - Protective order
  - Who filed it?: earlier_RFA[i].who_filed
    datatype: object_radio
    choices:
      - users
      - other_parties
  - In what court, county and state? Example -- Family, Orleans, VT: earlier_RFA[i].where_filed
  - In what year?: earlier_RFA[i].year_filed
---
generic object: DAList
question: |
  Is there another action?
yesno: x[i].there_is_another
---
id: Gather users street or mailing address
sets:
  - users[0].address.address
  - users[0].address.city
question: |
  What is your address?
fields:
  - Address: users[0].address.address
    address autocomplete: True
  - Unit: users[0].address.unit
    required: False
  - City: users[0].address.city
  - State: users[0].address.state
    code: |
      states_list()
    default: VT
  - Zip or postal code: users[0].address.zip
    required: False
  - County: users[0].address.county
  - note: |
      Not sure what county? [Check this list of cities and towns to find the county.](https://en.m.wikipedia.org/wiki/List_of_municipalities_in_Vermont#Cities)
  - Do you have a mailing address that is different from your street address?: users1_mailing_address_different
    datatype: yesnoradio
  - Mailing address: users[0].mailing_address.address
    address autocomplete: True
    show if: users1_mailing_address_different
  - Unit: users[0].mailing_address.unit
    required: False
    show if: users1_mailing_address_different
  - City: users[0].mailing_address.city
    show if: users1_mailing_address_different
  - State: users[0].mailing_address.state
    code: |
      states_list()
    default: VT
    show if: users1_mailing_address_different
  - Zip or postal code: users[0].mailing_address.zip
    required: False
    show if: users1_mailing_address_different
---
id: Gather users contact information
question: |
  What is your contact information?
subquestion: |
  Include **at least one way** to reach you. 
fields:  
  - Daytime phone number: users[0].daytime_phone_number
    datatype: al_international_phone
    required: False
  - Evening phone number: users[0].evening_phone_number
    datatype: al_international_phone
    required: False
  - Email: users[0].email    
    datatype: email
    required: False      
validation code: |
  if (not showifdef('users[0].daytime_phone_number') and \
      (not showifdef('users[0].email')) and \
      (not showifdef('users[0].evening_phone_number'))):
    validation_error(word("You need to provide at least one contact method."))
---
id: Users resided in VT length
question: |
  Have you resided in Vermont for 6 full months?
fields:
  - no label: user_resided_VT_6_months
    datatype: yesnoradio
---
id: DES assistance
question: |
   Do you or ${ other_parties } get assistance from the Vermont Economic Services Division?
subquestion: |
  Examples: 3SquaresVT/food stamps, Reach Up and [others listed on the state's website.](https://dcf.vermont.gov/esd/applicants/benefits)
fields:
  - "Choose at least one": des
    datatype: checkboxes
    none of the above: False    
    minlength: 1
    choices:
    - You get Economic Services assistance: plaintiff_des_assistance
    - ${ other_parties } gets Economic Services assistance: defendant_des_assistance
    - We don't get Economic Services assistance, or I'm not sure: no_des_assistance
---
id: military service
question: |
   Do you or ${ other_parties } serve in the military?
fields:
  - "Choose at least one": military
    datatype: checkboxes
    none of the above: False    
    minlength: 1
    choices:
    - You serve in the military: plaintiff_military_service
    - ${ other_parties } serves in the military: other_parties1_military
    - We do not serve in the military, or I'm not sure: no_military_service
---
id: other parties attorney info
question: |
  Does ${ other_parties[0] } have a lawyer for this legal matter?
fields:
  - no label: other_parties_has_attorney
    datatype: yesnomaybe
  - Attorney (lawyer) name: other_parties1_attorneys_name
    show if: other_parties_has_attorney
  - Attorney phone number: other_parties1_attorneys_phone_number
    datatype: al_international_phone
    show if: other_parties_has_attorney
---
id: Gather other parties contact information
question: |
  What is ${ other_parties[0] }'s contact information?
subquestion: |
  Include **at least one way** to reach them. 
fields:  
  - Daytime phone number: other_parties[0].daytime_phone_number
    datatype: al_international_phone
    required: False
  - Evening phone number: other_parties[0].evening_phone_number
    datatype: al_international_phone
    required: False
  - Email: other_parties[0].email    
    datatype: email
    required: False      
validation code: |
  if (not showifdef('other_parties[0].daytime_phone_number') and \
      (not showifdef('other_parties[0].email')) and \
      (not showifdef('other_parties[0].evening_phone_number'))):
    validation_error(word("You need to provide at least one contact method."))
---
id: Gather other parties street or mailing address
sets:
  - other_parties[0].address.address
  - other_parties[0].address.city
question: |
  What is ${ other_parties[0] }'s address?
fields:
  - Their address: other_parties[0].address
    datatype: object_radio
    choices:
      - users[0].address if defined("users[0].address.address") else None
    object labeler: |
      lambda y: y.on_one_line()
    none of the above: |
      Somewhere else
    default: users[0].address
    disable others: 
      - other_parties[0].address.address
      - other_parties[0].address.unit
      - other_parties[0].address.city
      - other_parties[0].address.state
      - other_parties[0].address.zip
      - other_parties[0].address.county    
    show if:
      code: |
        defined("users[0].address.address")
  - ${ users[0].address.address_label}: other_parties[0].address.address
    address autocomplete: True
  - ${ users[0].address.unit_label}: other_parties[0].address.unit
    required: False
  - ${ users[0].address.city_label}: other_parties[0].address.city
  - ${ users[0].address.state_label}: other_parties[0].address.state
    code: |
      states_list(country_code=AL_DEFAULT_COUNTRY)
    default: ${ AL_DEFAULT_STATE }
  - ${ users[0].address.zip_label}: other_parties[0].address.zip
    required: False      
  - ${ users[0].address.county_label}: other_parties[0].address.county
  - note: |
      Not sure what county? [Check this list of cities and towns to find the county.](https://en.m.wikipedia.org/wiki/List_of_municipalities_in_Vermont#Cities)
  - Does ${ other_parties } have a mailing address that is different from their street address?: other_parties1_mailing_address_different
    datatype: yesnoradio
  - Mailing address: other_parties[0].mailing_address.address
    address autocomplete: True
    show if: other_parties1_mailing_address_different
  - Unit: other_parties[0].mailing_address.unit
    required: False
    show if: other_parties1_mailing_address_different
  - City: other_parties[0].mailing_address.city
    show if: other_parties1_mailing_address_different
  - State: other_parties[0].mailing_address.state
    code: |
      states_list()
    default: VT
    show if: other_parties1_mailing_address_different
  - Zip or postal code: other_parties[0].mailing_address.zip
    required: False
    show if: other_parties1_mailing_address_different
---
id: filing_financial_form
question: |
  Are you also filing a completed financial form 400-00813B now?
subquestion: |
  Everyone completes financial form 400-00813B -- either now or later. On that form you will list all of the property, assets, and debts that you and ${ other_parties[0] } own together or separately that are known to you. You can file it now with the Complaint form, or file it at a later date. ([See the paper version of the form.](https://www.vermontjudiciary.org/media/926))
fields:
  - "Are you filing form 400-00813B now?": filing_financial_form
    datatype: yesnoradio
---
id: what asking court for and grounds
question: |
  What are you asking the court for?
fields:
  - Asking for: grant_for
    input type: radio
    choices: 
      - Divorce: divorce
      - Legal Separation: legal_separation
    show if: 
      code: |
        license_type == "marriage"
  - Asking for: grant_for
    input type: radio
    choices: 
      - Civil union dissolution: dissolution
    show if: 
      code: |
        license_type == "civil_union"
  - On what grounds (for what reason)?: grounds
    input type: radio
    choices: 
      - We have been or will have lived separate and apart for more than 6 months in a row. It is not reasonably probable that we can resume our relationship. (Note - This is the most common reason.): six_month_separation
      - Other grounds (a different reason): other_ground
  - Date of separation: separation_date
    datatype: date
    show if: 
      variable: grounds
      is: six_month_separation  
  - Describe the other grounds (different reason): other_ground_explanation
    show if: 
      variable: grounds
      is: other_ground
    maxlength: 60
  - note: Other things you are asking the court for. Check all that apply.
  - I want a fair division of our property, assets and debts: property_maintenance
    datatype: yesno
  - I want ${ other_parties[0] } to pay me spousal maintenance (alimony): spousal_maintenance
    datatype: yesno
  - I want ${ other_parties[0] } to reimburse my court costs: court_costs
    datatype: yesno
  - I want ${ other_parties[0] } to pay my attorney fees: attorney_fees
    datatype: yesno
  - I want to change my name: name_change
    datatype: yesno
  - I want to go back to my former full name: plaintiff_former_name
    show if: name_change
  - I have a written agreement signed by me and ${ other_parties }. I will include it with these forms. I ask the court to issue an order that includes the provisions in our written agreement. : written_agreement_attached
    datatype: yesno
  - note: |
      **If you and your spouse are not residents of Vermont**, but you had a civil union or marriage in Vermont, you need to submit a signed agreement about how to deal with your property and debts. In your situation, the court will not grant the divorce or dissolution without an agreement. See [VTLawHelp for more details and a form.](https://vtlawhelp.org/roadmap/divorce/step-1)
  - note: |      
      **If you have a written agreement**, attach it to the forms that you file with the court. The written agreement must include:
      
      1. a property, debt and spousal support agreement (which is called a "stipulation")
      
      2. a parenting plan agreement / stipulation (if you have kids),  and
      
      3. a child support order (if you have kids).
      
      See our [Divorce Roadmap on VTLawHelp.org](https://vtlawhelp.org/roadmap/divorce/step-3) for agreement forms you can use.
      
      **To qualify for a reduced court filing fee**, the attached agreement must cover all the issues that you want to have the court resolve.
    show if: written_agreement_attached
---
id: ask for custody visitation and child support
question: |  
  Custody, visitation and child support
subquestion: |     
  <h2 class="h4">I ask that the court grant me the following. (Check all that apply.)</h2>
fields:

  - note: |
      **Parental rights and responsibilities:**
  - note: |
      ${ collapse_template(what_is_legal_parental_rights) }
      ${ collapse_template(what_is_physical_parental_rights) }
  #- Parental rights and responsibilities: parental_rights
    #datatype: yesno
    #required: False
  - Legal parental rights and responsibilities: legal_rights_responsibilities
    datatype: yesno
    required: False
    default: True
  - Choose one: lrr_choice
    choices:
    - Shared jointly: legal_shared_jointly
    - Given only to myself: legal_myself
    - Given only to ${ other_parties[0] }: legal_defendant
    input type: radio
    css class: indent-me
    show if: legal_rights_responsibilities

  - Physical parental rights and responsibilities: physical_rights_responsibilities
    datatype: yesno
    required: False
    default: True
  - Choose one: prr_choice
    choices:
    - Shared jointly: physical_shared_jointly
    - Given only to myself: physical_myself
    - Given only to ${ other_parties[0] }: physical_defendant
    input type: radio
    css class: indent-me
    show if: physical_rights_responsibilities
  - note: |
      ---
  - note: |
      **Parent-child contact:**  
  - note: |
      ${ collapse_template(what_is_parent_child_contact) }
  - Choose at least one: contact_for
    choices:
    - Contact for myself: contact_for_myself
    - Contact for ${ other_parties[0] }: contact_for_defendant
    datatype: checkboxes
    none of the above: False    
    minlength: 1

  - note: |
      ---
  - note: |
      **Support:**
  - note: |
      ${ collapse_template(what_is_child_medical_and_maintenance_support) }
  - I would like child support, medical support and/or maintenance supplement: child_medical_support
    datatype: yesno
  - note: |
    
      **Keep in mind**: If you and your spouse can’t agree about something -- including custody and parent-child contact -- the court will decide for you as part of the court process.
---
id: preview divorce
question: |
  Preview your form before you sign it
subquestion: |
  Here is a preview of the form you will sign on the next page.   
  
  ${ al_court_bundle.as_pdf(key='preview') }

  Click the image to open it in a new tab. Click the "Edit your answers" button
  to edit your answers.

  ${ action_button_html(url_action('review_divorce'), label='Edit your answers', color='info') }
  
  Remember to come back to this window to continue and sign your form.
continue button field: divorce_preview_question    
---
code: |
  signature_fields = ['users[0].signature']
---
code: |
  # This is a placeholder for the addresses that will be searched
  # for matching address to court. Edit if court venue is based on 
  # a different address than the user's
  [user.address.address for user in users.complete_elements()]
  addresses_to_search = [user.address for user in users.complete_elements()]
---
###################### Review screen ######################
id: divorce review screen
event: review_divorce
question: |
  Review your answers
subquestion: |  
  ${ review_screen_instructions }
  
review:

  - note: |
      ###About you
      
  - Edit: users.revisit
    button: |
      About you (edit your name, birthdate, gender and former name)

      % for item in users:
        - **${ item }**
      % endfor
  - Edit: plaintiff_VT
    button: |
      You have lived in Vermont for past 6 months: **${ word(yesno(plaintiff_VT)) }**
      
      % if defined("date_plaintiff_moved_to_VT"):
      * Date you moved to Vermont: **${ format_date(date_plaintiff_moved_to_VT, format="M/d/yyyy") }**
      % endif
  - Edit: users[0].address.address
    button: |      
      Your address:
      
      - **${ users[0].address.on_one_line() }**
      
      % if users1_mailing_address_different:
      - Mailing address: **${ users[0].mailing_address.on_one_line() }**
      % endif
  - Edit: users[0].email
    button: |      
      Your contact info:
      
      % if defined("users[0].email"):
      - Email: **${ users[0].email }**
      % else:
      - Email: **None**
      % endif
      
      % if defined("users[0].daytime_phone_number"):
      - Daytime phone: **${ users[0].daytime_phone_number }**
      % else:
      - Daytime phone: **None**
      % endif
      
      % if defined("users[0].evening_phone_number"):
      - Evening phone: **${ users[0].evening_phone_number }** 
      % else:
      - Evening phone: **None**
      % endif
  - Edit: user_has_attorney
    button: |
      % if defined("user_has_attorney"):
      You have a lawyer:
      **${ word(yesno(user_has_attorney)) }**
      % endif
      
      % if defined("user_has_attorney") and user_has_attorney:
      - Your lawyer: **${ users1_attorneys_name }** at **${ users1_attorneys_phone_number }**
      % endif

  - note: |
      ###About the other party
  - Edit: other_parties.revisit
    button: |
      About the other party / defendant (edit name, birthdate, gender and former name)

      % for item in other_parties:
        - **${ item }**
      % endfor

  - Edit: defendant_VT
    button: |
      They have lived in Vermont for past 6 months: **${ word(yesno(defendant_VT)) }**
      
      % if defined("date_defendant_moved_to_VT"):
      * Date they moved to Vermont: **${ format_date(date_defendant_moved_to_VT, format="M/d/yyyy") }**
      % endif
      
      
      
  - Edit: other_parties[0].address.address
    button: |      
      Their address:
      
      - **${ other_parties[0].address.on_one_line() }**
      
      % if other_parties1_mailing_address_different:
      - Mailing address: **${ other_parties[0].mailing_address.on_one_line() }**
      % endif
  - Edit: other_parties[0].email
    button: |      
      Their contact info:
      
      % if defined("other_parties[0].email"):
      - Email: **${ other_parties[0].email }**
      % else:
      - Email: **None**
      % endif
      
      % if defined("other_parties[0].daytime_phone_number"):
      - Daytime phone: **${ other_parties[0].daytime_phone_number }**
      % else:
      - Daytime phone: **None**
      % endif
      
      % if defined("other_parties[0].evening_phone_number"):
      - Evening phone: **${ other_parties[0].evening_phone_number }** 
      % else:
      - Evening phone: **None**
      % endif
  - Edit: other_parties_has_attorney
    button: |
      % if defined("other_parties_has_attorney"):
      They have a lawyer:
      **${ word(yesno(other_parties_has_attorney)) }**
      % endif
      
      % if defined("other_parties_has_attorney") and other_parties_has_attorney:
      - Their lawyer: **${ other_parties1_attorneys_name }** at **${ other_parties1_attorneys_phone_number }**
      % endif      
      
  - note: |
      ###Details about both of you
  - Edit: license_type
    button: |
      % if license_type == "marriage":
      You were married in:
      
      - **${ marriage_city }, ${ marriage_state },** on **${ marriage_date }**
      % endif
      % if license_type == "civil_union":
      You had a civil union in:
      
      - **${ civil_union_city }, ${ civil_union_state },** on **${ civil_union_date }**
      % endif
  - Edit: des
    button: |
      Get assistance from Economic Services Division:
      
      * You: 
      % if des['plaintiff_des_assistance']:
      **Yes**
      % endif
      % if not des['plaintiff_des_assistance']:
      **No**
      % endif
      
      * The other party:
      % if des['defendant_des_assistance']:
      **Yes**
      % endif
      % if not des['defendant_des_assistance']:
      **No**
      % endif
  - Edit: military
    button: |
      In the military:

      * You: 
      % if military['plaintiff_military_service']:
      **Yes**
      % endif
      % if not military['plaintiff_military_service']:
      **No**
      % endif

      * The other party:
      % if military['other_parties1_military']:
      **Yes**
      % endif
      % if not military['other_parties1_military']:
      **No**
      % endif      

  - Edit: earlier_actions.revisit
    button: |
      % if defined("earlier_actions[0]"):
        Earlier actions:

      % for item in earlier_actions:
        - **${ item.action_type }**, in ${ item.year_filed }, filed by ${ item.who_filed }, in this court: ${ item.where_filed }
      % endfor
      % endif

  - Edit: earlier_RFA.revisit
    button: |
      % if defined("earlier_RFA[0]"):
        Earlier protection orders:

      % for item in earlier_RFA:
        - **${ item.action_type }**, in ${ item.year_filed }, filed by ${ item.who_filed }, in this court: ${ item.where_filed }
      % endfor
      % endif
      
  - Edit: 
    - have_school_age_children
    button: |
      You have children together who are either younger than 18 years old, or are 18 years old and still in high school:
      **${ word(yesno(have_school_age_children)) }**
  - Edit: minor_children_number
    button: |
      Date you and ${ other_parties[0].name } last lived in the same household:
      **${ showifdef("no_longer_living_together_date") }**
      
      As of that date, number of children under age 18 who lived in the household:
      **${ showifdef("minor_children_number") }**
  - note: |
      % if children.target_number > 0:
      ###About the kids
      % endif
  - Edit: children.revisit
    button: |
      Children

      % for item in children:
      - **${ item }** -- Birthdate: ${ item.birthdate }
      % endfor
  - Edit: locations.revisit
    button: |
      Where the children lived

      % for item in locations:
      **${ item.address.on_one_line() }**
      
      - From: ${ item.start_date } to ${ item.end_date }. With: ${ item.housemates }
      
      % endfor

  - note: |
      ###What you want in the court order
  - Edit: grant_for
    button: |
      You are seeking a:
      
      % if grant_for == "divorce":
      - **Divorce**
      % endif
      % if grant_for == "legal_separation":
      - **Legal separation**
      % endif
      % if grant_for == "dissolution":
      - **Civil union dissolution**
      % endif

      Grounds / reason:
      
      % if grounds == "six_month_separation":
      - **Separated six months or more** -- Date of separation: ${ separation_date }
      % else:
      - **${ other_ground_explanation}**
      % endif

      You would like:
      
      - Property maintenance:
      **${ word(yesno(property_maintenance)) }**

      - Spousal maintenancee:
      **${ word(yesno(spousal_maintenance)) }**

      - Court costs:
      **${ word(yesno(court_costs)) }**

      - Attorney fees:
      **${ word(yesno(attorney_fees)) }**

      - Name change:
      **${ word(yesno(name_change)) }**

      - Include written agreement:
      **${ word(yesno(written_agreement_attached)) }**


  - Edit: legal_rights_responsibilities
    button: |
      % if legal_rights_responsibilities:
      Legal parental rights and responsibilities:
      
        % if lrr_choice == "legal_shared_jointly":
        - **Shared jointly**
        % endif
        % if lrr_choice == "legal_myself":
        - **Given solely to myself**
        % endif
        % if lrr_choice == "legal_defendant":
        - **Given solely to ${ other_parties[0] }**
        % endif
      % else:
      Legal parental rights and responsibilities:
      
      - **None**
      % endif
  
  - Edit: physical_rights_responsibilities
    button: |
      % if physical_rights_responsibilities:
      Physical parental rights and responsibilities:
      
        % if prr_choice == "physical_shared_jointly":
        - **Shared jointly**
        % endif
        % if prr_choice == "physical_myself":
        - **Given solely to myself**
        % endif
        % if prr_choice == "physical_defendant":
        - **Given solely to ${ other_parties[0] }**
        % endif
      % else:
      Physical parental rights and responsibilities:
      
      - **None**
      % endif
  
  - Edit: contact_for
    button: |
      % if contact_for["contact_for_myself"]:
        % if contact_for["contact_for_defendant"]:
        Parent-child contact:
        
        - **Contact for myself**
        - **Contact for ${ other_parties[0] }**
        % else:
        Parent-Child Contact:
      
        - **Contact for myself**
        % endif
      % elif contact_for["contact_for_defendant"]:
      Parent-Child Contact:
      
      - **Contact for ${ other_parties[0] }**     
      % endif
      
  - Edit: child_medical_support
    button: |
      Child support, medical support and/or maintenance supplement:
      
      - **${yesno(child_medical_support)}**

  -  Edit: participations
     button: |
       You have participated as a party, witness, or in some other way in a court case about the custody of this child or these children in Vermont or another state.: **${ word(yesno(participations)) }**
       
       % if defined("child_custody[0].explanation"):
       - ${ child_custody[0].explanation }
       % endif
       
       You have information about a case concerning this child or these children that is now pending in a Vermont court or a court in another state.: **${ word(yesno(information)) }**
       
       % if defined("child_custody[1].explanation"):
       - ${ child_custody[1].explanation }
       % endif
       
       You have knowledge about a person who is not a party to this case who has physical custody of this child or these children or who claims to have custody of or visitation rights to this child or these children.: **${ word(yesno(knowledge)) }**
        
       % if defined("child_custody[2].explanation"):
       - ${ child_custody[2].explanation }
       % endif


  - Edit: filing_financial_form
    button: |
      You are filing financial form 400-00813B now:
      **${ word(yesno(filing_financial_form)) }**

  - Edit: 
    - trial_court_index
    - recompute:
      - trial_court
    button: |
      % if defined("trial_court"):
      You are filing in the family court of: **${ trial_court.address.county } County**
      % endif

  - Edit: docket_number
    button: |
      % if defined("docket_number"):
      Court docket number / case number: **${ docket_number }**
      % else:
      Court docket number / case number: **Unknown**
      % endif

---
continue button field: users.revisit
question: |
  Edit info about you
subquestion: |
  ${ users.table }

  ${ users.add_action() }
---
table: users.table
rows: users
columns:
  - Name: |
      row_item.name.full() if defined("row_item.name.first") else ""
  - Birthdate: |
      row_item.birthdate if defined("row_item.birthdate") else ""
  - Gender: |
      row_item.gender if defined("row_item.gender") else ""
  - Sex: |
      row_item.sex if defined("row_item.sex") else ""
  - Former name: |
      row_item.last_name_former if defined("row_item.last_name_former") else ""  
edit:
  - last_name_former
  - birthdate
  - signature
confirm: True
---
continue button field: other_parties.revisit
question: |
  Edit info about the other party
subquestion: |
  ${ other_parties.table }

  ${ other_parties.add_action() }
---
table: other_parties.table
rows: other_parties
columns:
  - Name: |
      row_item.name.full() if defined("row_item.name.first") else ""
  - Birthdate: |
      row_item.birthdate if defined("row_item.birthdate") else ""
  - Gender: |
      row_item.gender if defined("row_item.gender") else ""
  - Sex: |
      row_item.sex if defined("row_item.sex") else ""
  - Former name: |
      row_item.last_name_former if defined("row_item.last_name_former") else ""  
edit:
  - last_name_former
  - birthdate
confirm: True
---
continue button field: children.revisit
question: |
  Edit info about the children
subquestion: |
  ${ children.table }

  ${ children.add_action() }
---
table: children.table
rows: children
columns:
  - Name: |
      row_item.name.full() if defined("row_item.name.first") else ""
  - Birthdate: |
      row_item.birthdate if defined("row_item.birthdate") else "" 
edit:
  - name.first
  - birthdate
confirm: True
---
continue button field: locations.revisit
question: |
  Edit info about the children
subquestion: |
  ${ locations.table }

  ${ locations.add_action() }
---
table: locations.table
rows: locations
columns:
  - Address: |
      row_item.address.on_one_line() if defined("row_item.address.address") else ""
  - Start date: |
      row_item.start_date if defined("row_item.start_date") else "" 
  - End date: |
      row_item.end_date if defined("row_item.end_date") else "" 
  - Lived with: |
      row_item.housemates if defined("row_item.housemates") else ""       
edit:
  - address.address
  - start_date
confirm: True
---
continue button field: earlier_actions.revisit
question: |
  Edit earlier actions
subquestion: |
  ${ earlier_actions.table }

  ${ earlier_actions.add_action() }
---
table: earlier_actions.table
rows: earlier_actions
columns:
  - Where filed: |
      row_item.where_filed if defined("row_item.where_filed") else ""
  - Who filed: |
      row_item.who_filed if defined("row_item.who_filed") else ""
  - Action type: |
      row_item.action_type if defined("row_item.action_type") else ""
  - Year filed: |
      row_item.year_filed if defined("row_item.year_filed") else ""
edit:
  - where_filed
  - who_filed
  - action_type
  - year_filed
confirm: True
---
continue button field: earlier_RFA.revisit
question: |
  Edit earlier RFA
subquestion: |
  ${ earlier_RFA.table }

  ${ earlier_RFA.add_action() }
---
table: earlier_RFA.table
rows: earlier_RFA
columns:
  - Where filed: |
      row_item.where_filed if defined("row_item.where_filed") else ""
  - Who filed: |
      row_item.who_filed if defined("row_item.who_filed") else ""
  - Action type: |
      row_item.action_type if defined("row_item.action_type") else ""
  - Year filed: |
      row_item.year_filed if defined("row_item.year_filed") else ""
edit:
  - where_filed
  - who_filed
  - action_type
  - year_filed
confirm: True
---
###################### Download screen ######################
id: download divorce
event: divorce_download
question: |
  Review your forms and download and/or print them
subquestion: |
  ${ download_screen_instructions }

  ${ action_button_html(url_action('review_divorce'), label='Edit your answers', color='info') }
  
  
  ${ al_user_bundle.download_list_html() }
  

  ${ al_user_bundle.send_button_html(show_editable_checkbox=False) }

  
  ${ download_screen_bottom_instructions }
  
  ${ collapse_template(not_seeing_email) }
  ${ collapse_template(log_out_when_done) }

progress: 100
---
###################### Attachments ######################
# ALDocument objects specify the metadata for each template
objects:
  - divorce_Post_interview_instructions: ALDocument.using(title="NEXT STEPS - Instructions for filing these forms with the court", filename="divorce_next_steps.docx", enabled=True, has_addendum=False)
  - divorce_no_kids_attachment: ALDocument.using(title="Complaint for divorce, separation, dissolution (no kids)", filename="divorce_no_kids", has_addendum=True, )
  - divorce_with_kids_attachment: ALDocument.using(title="Complaint for divorce, separation, dissolution (with kids)", filename="divorce_with_kids", has_addendum=True)
  - Health_record_divorce_annulment_attachment: ALDocument.using(title="Health department form", filename="Health_record_divorce_annulment", has_addendum=False, )
  - Health_record_civil_union_attachment: ALDocument.using(title="Health department form", filename="Health_record_civil_union", has_addendum=False, )
---
attachment:
  variable name: divorce_no_kids_attachment.addendum
  docx template file: divorce_no_kids_addendum.docx
---
code: |
  divorce_no_kids_attachment.overflow_fields['earlier_actions'].overflow_trigger = 3
  divorce_no_kids_attachment.overflow_fields['earlier_actions'].label = "Other earlier actions"
  divorce_no_kids_attachment.overflow_fields['earlier_RFA'].overflow_trigger = 3
  divorce_no_kids_attachment.overflow_fields['earlier_RFA'].label = "Other RFA actions"
  divorce_no_kids_attachment.overflow_fields.gathered = True 
---
attachment: 
  variable name: divorce_with_kids_attachment.addendum
  docx template file: divorce_with_kids_addendum.docx
---
code: |
  divorce_with_kids_attachment.overflow_fields['child_custody'].overflow_trigger = 0
  divorce_with_kids_attachment.overflow_fields['child_custody'].label = "Information about child custody"
  divorce_with_kids_attachment.overflow_fields['earlier_actions'].overflow_trigger = 3
  divorce_with_kids_attachment.overflow_fields['earlier_actions'].label = "Other earlier actions"
  divorce_with_kids_attachment.overflow_fields['earlier_RFA'].overflow_trigger = 3
  divorce_with_kids_attachment.overflow_fields['earlier_RFA'].label = "Other RFA actions"
  divorce_with_kids_attachment.overflow_fields['children'].overflow_trigger = 5
  divorce_with_kids_attachment.overflow_fields['children'].label = "Other children"
  divorce_with_kids_attachment.overflow_fields['locations'].overflow_trigger = 3
  divorce_with_kids_attachment.overflow_fields['locations'].label = "More information about the children's housing situation"
  divorce_with_kids_attachment.overflow_fields.gathered = True 
---
# Bundles group the ALDocuments into separate downloads, such as for court and for the user
objects:
  - al_user_bundle: ALDocumentBundle.using(elements=[
          divorce_Post_interview_instructions,
          divorce_with_kids_attachment,
          divorce_no_kids_attachment,
          a_notice_of_appearance_self_rep_attachment,
          b_info_sheet_family_court_attachment,
          Health_record_civil_union_attachment,
          Health_record_divorce_annulment_attachment,
          VTCertificateOfService_attachment,
        ], filename="divorce_forms", title="All forms to download for your records", enabled=True)
  
  - al_court_bundle: ALDocumentBundle.using(elements=[
          divorce_with_kids_attachment,
          divorce_no_kids_attachment,
          a_notice_of_appearance_self_rep_attachment,
          b_info_sheet_family_court_attachment,
          Health_record_civil_union_attachment,
          Health_record_divorce_annulment_attachment,
          VTCertificateOfService_attachment,
        ],  filename="divorce_forms", title="All forms to deliver to court", enabled=True)
---
code: |
  VTCertificateOfService_attachment.enabled = True # always needed for a new petition
---
code: |
  if have_school_age_children:
    divorce_with_kids_attachment.enabled = True
    divorce_no_kids_attachment.enabled = False
  else:
    divorce_with_kids_attachment.enabled = False
    divorce_no_kids_attachment.enabled = True
---
code: |
  if license_type == "civil_union":
    Health_record_civil_union_attachment.enabled = True
    Health_record_divorce_annulment_attachment.enabled = False
    
  if license_type == "marriage":
    Health_record_divorce_annulment_attachment.enabled = True
    Health_record_civil_union_attachment.enabled = False
---
# Each attachment defines a key in an ALDocument. We use `i` as the placeholder here so the same template is 
# used for "preview" and "final" keys, and logic in the template checks the value of 
# `i` to show or hide the user's signature
attachment:
  name: Post-interview-Instructions
  filename: divorce_next_steps
  docx template file: divorce_next_steps.docx
  variable name: divorce_Post_interview_instructions[i]
  skip undefined: True
  fields:
      - "address_county": ${ trial_court.address.county }
      - "division": ${ trial_court.division }
      - "name": ${ trial_court }
      - "address_address": ${ trial_court.address.address }
      - "address_unit": ${ trial_court.address.unit }
      - "address_city": ${ trial_court.address.city }
      - "address_state": ${ trial_court.address.state }
      - "address_zip": ${ trial_court.address.zip }
      - "arbitrary_attribute": ${ trial_court.arbitrary_attribute }
      - "phone": ${ trial_court.phone }
      - "email": ${ trial_court.email }
  
---
attachment:
  name: divorce no kids
  filename: divorce_no_kids
  variable name: divorce_no_kids_attachment[i]
  skip undefined: True
  pdf template file: divorce_no_kids.pdf
  fields:
      - "docket_number": ${ docket_number }
      - "trial_court_county": ${ trial_court.address.county }
      - "users1_name": ${ users[0].name }
      - "other_parties1_name": ${ other_parties[0] }
      - "users1_name1": ${ users[0].name }
      - "users1_birthdate": ${ format_date(users[0].birthdate, format='M/d/yyyy') }
      - "users1_address_line_one": ${ users[0].address.line_one() }
      - "users1_address_line_two": ${ users[0].address.line_two() }
      - "users1_address_mailing_line_one": |
          % if users1_mailing_address_different:
          ${ users[0].mailing_address.line_one() }
          % endif
      - "users1_address_mailing_line_two": |
          % if users1_mailing_address_different:
          ${ users[0].mailing_address.line_two() }
          % endif
      - "users1_email": ${ users[0].email }
      - "users1_evening_phone_number": ${ users[0].evening_phone_number }
      - "users1_daytime_phone_number": ${ users[0].daytime_phone_number }
      - "users1_attorneys_name": |
          % if defined("user_has_attorney") and user_has_attorney:
          ${ users1_attorneys_name }
          % endif
      - "users1_attorneys_phone_numer": |
          % if defined("user_has_attorney") and user_has_attorney:
          ${ users1_attorneys_phone_number }
          % endif
      - "other_parties1_name1": ${ other_parties[0].name }
      - "other_parties1_birthdate": ${ format_date(other_parties[0].birthdate, format='M/d/yyyy') }
      - "other_parties1_address_line_one": ${ other_parties[0].address.line_one() }
      - "other_parties1_address_line_two": ${ other_parties[0].address.line_two() }
      - "other_parties1__mailing_address_line_one": |
          % if other_parties1_mailing_address_different:
          ${ other_parties[0].mailing_address.line_one() }
          % endif
      - "other_parties1__mailing_address_line_two": |
          % if other_parties1_mailing_address_different:
          ${ other_parties[0].mailing_address.line_two() }
          % endif
      - "other_parties1_email": ${ other_parties[0].email }
      - "other_parties1_evening_phone_number": ${ other_parties[0].evening_phone_number }
      - "other_parties1_daytime_phone_number": ${ other_parties[0].daytime_phone_number }
      - "other_parties1_attorneys_name": ${ other_parties1_attorneys_name }
      - "other_parties1_attorneys_phone_number": ${ other_parties1_attorneys_phone_number }
      - "other_parties1_name2": ${ other_parties[0].name }
      - "users1_name2": ${ users[0].name }
      - "users1_name3": ${ users[0].name }
      - "divorce": ${ grant_for == "divorce" }
      - "civil_union_dissolution": ${ grant_for == "dissolution" }
      - "legal_separation": ${ grant_for == "legal_separation" }
      - "trial_court_county1": ${ trial_court.address.county } Family Division, ${ trial_court.address.on_one_line() }
      - "users1_signature": ${ users[0].signature_if_final(i) }
      - "users1_address_county": ${ users[0].address.county }
      - "users1_address_state": ${ users[0].address.state }
      - "plaintiff_VT": ${ plaintiff_VT }
      - "date_plaintiff_moved_to_VT": ${ format_date(date_plaintiff_moved_to_VT, format='M/d/yyyy') }
      - "other_parties1_address_county": ${ other_parties[0].address.county }
      - "other_parties1_address_state": ${ other_parties[0].address.state }
      - "defendant_VT": ${ defendant_VT }
      - "date_defendant_moved_to_VT": ${ format_date(date_defendant_moved_to_VT, format='M/d/yyyy') }
      - "marriage": ${ license_type == "marriage" }
      - "marriage_state": ${ marriage_state }
      - "marriage_city": ${ marriage_city }
      - "marriage_date": ${ format_date(marriage_date, format='M/d/yyyy') }
      - "civil_union": ${ license_type == "civil_union" }
      - "civil_union_city": ${ civil_union_city }
      - "civil_union_state": ${ civil_union_state }
      - "civil_union_date": ${ format_date(civil_union_date, format='M/d/yyyy') }
      - "grant_for": True 
      - "divorce1": ${ grant_for == "divorce" }
      - "legal_seeparation1": ${ grant_for == "legal_separation" }
      - "civil_union_dissolution1": ${ grant_for == "dissolution" }
      - "six_month_separation": ${ grounds == "six_month_separation" }
      - "separation_date": ${ format_date(separation_date, format='M/d/yyyy') }
      - "other_ground": ${ grounds == "other_ground" }
      - "other_ground_explanation": ${ other_ground_explanation }
      - "filing_financial_form": ${ filing_financial_form }
      - "not_filing_financial_form": ${ not filing_financial_form }
      - "plaintiff_des_assistance": ${ des['plaintiff_des_assistance'] }
      - "defendant_des_assistance": ${ des['defendant_des_assistance'] }
      - "earlier_actions_no": ${ not earlier_actions_yes }
      - "earlier_actions_yes": ${ earlier_actions_yes }
      - "earlier_actions_where_filed1": ${ earlier_actions[0].where_filed }
      - "earlier_actions_filer1": ${ earlier_actions[0].who_filed }
      - "earlier_actions_type1": ${ earlier_actions[0].action_type }
      - "earlier_actions_year_filed1": ${ earlier_actions[0].year_filed }
      - "earlier_actions_where_filed2": ${ earlier_actions[1].where_filed }
      - "earlier_actions_filer2": ${ earlier_actions[1].who_filed }
      - "earlier_actions_type2": ${ earlier_actions[1].action_type }
      - "earlier_actions_year_filed2": ${ earlier_actions[1].year_filed }
      - "earlier_actions_where_filed3": ${ earlier_actions[2].where_filed }
      - "earlier_actions_filer3": ${ earlier_actions_filer[2].who_filed }
      - "earlier_actions_type3": ${ earlier_actions[2].action_type }
      - "earlier_actions_year_filed3": ${ earlier_actions[2].year_filed }
      - "earlier_RFA_no": ${ not earlier_RFA_yes }
      - "earlier_RFA_yes": ${ earlier_RFA_yes }
      - "earlier_RFA_where_filed1": ${ earlier_RFA[0].where_filed }
      - "earlier_RFA_filer1": ${ earlier_RFA[0].who_filed }
      - "earlier_RFA_actions_type1": ${ earlier_RFA[0].action_type }
      - "earlier_RFA_year_filed1": ${ earlier_RFA[0].year_filed }
      - "earlier_RFA_where_filed2": ${ earlier_RFA[1].where_filed }
      - "earlier_RFA_filer2": ${ earlier_RFA[1].who_filed }
      - "earlier_RFA_actions_type2": ${ earlier_RFA[1].action_type }
      - "earlier_RFA_year_filed2": ${ earlier_RFA[1].year_filed }
      - "earlier_RFA_where_filed3": ${ earlier_RFA[2].where_filed }
      - "earlier_RFA_filer3": ${ earlier_RFA[2].who_filed }
      - "earlier_RFA_actions_type3": ${ earlier_RFA[2].action_type }
      - "earlier_RFA_year_filed3": ${ earlier_RFA[2].year_filed }
      - "defendant_military_service": ${ military["other_parties1_military"] }
      - "defendant_no_military_service": ${ not military["other_parties1_military"] }
      - "plaintiff_military_service": ${ military["plaintiff_military_service"] }
      - "plaintiff_no_military_service": ${ not military["plaintiff_military_service"] }
      - "divorce_decree": ${ grant_for == "divorce" }
      - "legal_separation_decree": ${ grant_for == "legal_separation" }
      - "dissolution_decree": ${ grant_for == "dissolution" }
      - "property_maintenance": ${ property_maintenance }
      - "spousal_maintenancee": ${ spousal_maintenance }
      - "court_costs": ${ court_costs }
      - "attorney_fees": ${ attorney_fees }
      - "name_change": ${ name_change }
      - "plaintiff_former_name": ${ plaintiff_former_name }
      - "written_agreement_attached": ${ written_agreement_attached }
      # It's a signature: test which file version this is; leave empty unless it's the final version)
      - "signature_date1": ${ format_date(signature_date, format='M/d/yyyy') }
---
attachment:
  name: divorce with kids
  filename: divorce_with_kids
  variable name: divorce_with_kids_attachment[i]
  skip undefined: True
  pdf template file: divorce_with_kids.pdf
  fields:
      - "docket_number": ${ docket_number }
      - "trial_court_county": ${ trial_court.address.county }
      - "users1_name": ${ users[0].name }
      - "other_parties1_name": ${ other_parties[0] }
      - "users1_name1": ${ users[0].name }
      - "users1_birthdate": ${ format_date(users[0].birthdate, format='M/d/yyyy') }
      - "users1_address_line_one": ${ users[0].address.line_one() }
      - "users1_address_line_two": ${ users[0].address.line_two() }
      - "users1_address_mailing_line_one": |
          % if users1_mailing_address_different:
          ${ users[0].mailing_address.line_one() }
          % endif
      - "users1_address_mailing_line_two": |
          % if users1_mailing_address_different:
          ${ users[0].mailing_address.line_two() }
          % endif
      - "users1_email": ${ users[0].email }
      - "users1_evening_phone_number": ${ users[0].evening_phone_number }
      - "users1_daytime_phone_number": ${ users[0].daytime_phone_number }
      - "users1_attorneys_name": |
          % if defined("user_has_attorney") and user_has_attorney:
          ${ users1_attorneys_name }
          % endif
      - "users1_attorneys_phone_numer": |
          % if defined("user_has_attorney") and user_has_attorney:
          ${ users1_attorneys_phone_number }
          % endif
      - "other_parties1_name1": ${ other_parties[0].name }
      - "other_parties1_birthdate": ${ format_date(other_parties[0].birthdate, format='M/d/yyyy') }
      - "other_parties1_address_line_one": ${ other_parties[0].address.line_one() }
      - "other_parties1_address_line_two": ${ other_parties[0].address.line_two() }
      - "other_parties1__mailing_address_line_one": |
          % if other_parties1_mailing_address_different:
          ${ other_parties[0].mailing_address.line_one() }
          % endif
      - "other_parties1__mailing_address_line_two": |
          % if other_parties1_mailing_address_different:
          ${ other_parties[0].mailing_address.line_two() }
          % endif
      - "other_parties1_email": ${ other_parties[0].email }
      - "other_parties1_evening_phone_number": ${ other_parties[0].evening_phone_number }
      - "other_parties1_daytime_phone_number": ${ other_parties[0].daytime_phone_number }
      - "other_parties1_attorneys_name": ${ other_parties1_attorneys_name }
      - "other_parties1_attorneys_phone_number": ${ other_parties1_attorneys_phone_number }
      - "other_parties1_name2": ${ other_parties[0].name }
      - "users1_name2": ${ users[0].name }
      - "users1_name3": ${ users[0].name }
      - "divorce": ${ grant_for == "divorce" }
      - "civil_union_dissolution": ${ grant_for == "dissolution" }
      - "legal_separation": ${ grant_for == "legal_separation" }
      - "trial_court_county1": ${ trial_court.address.county } Family Division, ${ trial_court.address.on_one_line() }
      - "users1_signature": ${ users[0].signature_if_final(i) }
      - "users1_address_county": ${ users[0].address.county }
      - "users1_address_state": ${ users[0].address.state }
      - "plaintiff_VT": ${ plaintiff_VT }
      - "date_plaintiff_moved_to_VT": ${ format_date(date_plaintiff_moved_to_VT, format='M/d/yyyy') }
      - "other_parties1_address_county": ${ other_parties[0].address.county }
      - "other_parties1_address_state": ${ other_parties[0].address.state }
      - "defendant_VT": ${ defendant_VT }
      - "date_defendant_moved_to_VT": ${ format_date(date_defendant_moved_to_VT, format='M/d/yyyy') }
      - "marriage": ${ license_type == "marriage" }
      - "marriage_state": ${ marriage_state }
      - "marriage_city": ${ marriage_city }
      - "marriage_date": ${ format_date(marriage_date, format='M/d/yyyy') }
      - "civil_union": ${ license_type == "civil_union" }
      - "civil_union_city": ${ civil_union_city }
      - "civil_union_state": ${ civil_union_state }
      - "civil_union_date": ${ format_date(civil_union_date, format='M/d/yyyy') }
      - "grant_for": True 
      - "divorce1": ${ grant_for == "divorce" }
      - "legal_seeparation1": ${ grant_for == "legal_separation" }
      - "civil_union_dissolution1": ${ grant_for == "dissolution" }
      - "six_month_separation": ${ grounds == "six_month_separation" }
      - "separation_date": ${ format_date(separation_date, format='M/d/yyyy') }
      - "other_ground": ${ grounds == "other_ground" }
      - "other_ground_explanation": ${ other_ground_explanation }
      
      - "child_name1": ${ children[0].name }
      - "child_birthdate1": ${ children[0].birthdate }
      - "child_name2": ${ children[1].name }
      - "child_birthdate2": ${ children[1].birthdate }
      - "child_name3": ${ children[2].name }
      - "child_birthdate3": ${ children[2].birthdate }
      - "child_name4": ${ children[3].name }
      - "child_birthdate4": ${ children[3].birthdate }
      - "child_name5": ${ children[4].name }
      - "child_birthdate5": ${ children[4].birthdate }
     
      - "child_address1": |
          ${ locations[0].address.address } 
          % if defined("locations[0].address.unit"):
          Unit ${ locations[0].address.unit } 
          % endif
          ${ locations[0].address.city }, ${ locations[0].address.state } 
      - "child_date1": ${ locations[0].start_date } to ${ locations[0].end_date }
      - "child_housemate1": ${ locations[0].housemates }
      - "child_address2": |
          ${ locations[1].address.address } 
          % if defined("locations[1].address.unit"):
          Unit ${ locations[1].address.unit } 
          % endif
          ${ locations[1].address.city }, ${ locations[1].address.state } 
      - "child_date2": ${ locations[1].start_date } to ${ locations[1].end_date }
      - "child_housemate2": ${ locations[1].housemates }
      - "child_address3": |          
          ${ locations[2].address.address } 
          % if defined("locations[2].address.unit"):
          Unit ${ locations[2].address.unit } 
          % endif
          ${ locations[2].address.city }, ${ locations[2].address.state } 
      - "child_date3": ${ locations[2].start_date } to ${ locations[2].end_date }
      - "child_housemate3": ${ locations[2].housemates }
      - "child_address4": |          
          ${ locations[3].address.address } 
          % if defined("locations[3].address.unit"):
          Unit ${ locations[3].address.unit } 
          % endif
          ${ locations[3].address.city }, ${ locations[3].address.state } 
      - "child_date4": ${ locations[3].start_date } to ${ locations[3].end_date }
      - "child_housemate4": ${ locations[3].housemates }
      - "child_address5": |          
          ${ locations[4].address.address } 
          % if defined("locations[4].address.unit"):
          Unit ${ locations[4].address.unit } 
          % endif
          ${ locations[4].address.city }, ${ locations[4].address.state } 
      - "child_date5": ${ locations[4].start_date } to ${ locations[4].end_date }
      - "child_housemate5": ${ locations[4].housemates }
   
      - "participated_custody_child": ${ participations }
      - "information_child": ${ information }
      - "knowledge_custody_child": ${ knowledge }
      - "parental_rights": ${ legal_rights_responsibilities or physical_rights_responsibilities }    
      - "legal_shared_jointly": ${ lrr_choice == "legal_shared_jointly"}
      - "legal_given_solely": |
          % if lrr_choice == "legal_defendant" or lrr_choice == "legal_myself":
          ${ True }
          % endif
      - "legal_myself": ${ lrr_choice == "legal_myself" }
      - "legal_defendant": ${ lrr_choice == "legal_defendant" }
      - "physical_shared_jointly": ${ prr_choice == "physical_shared_jointly" }
      - "physical_given_solely": |
          % if prr_choice == "physical_defendant" or prr_choice == "physical_myself":
          ${ True }
          % endif
      - "physical_myself": ${ prr_choice == "physical_myself" }
      - "physical_defendant": ${ prr_choice == "physical_defendant" }
      - "contact_for": True
      - "contact_for_myself": ${ contact_for["contact_for_myself"] }
      - "contact_for_defendant": ${ contact_for["contact_for_defendant"] }
      - "child_medical_support": ${ child_medical_support }
      - "filing_financial_form": ${ filing_financial_form }
      - "not_filing_financial_form": ${ not filing_financial_form }
      - "plaintiff_des_assistance": ${ des['plaintiff_des_assistance'] }
      - "defendant_des_assistance": ${ des['defendant_des_assistance'] }
      - "earlier_actions_no": ${ not earlier_actions_yes }
      - "earlier_actions_yes": ${ earlier_actions_yes }
      - "earlier_actions_where_filed1": ${ earlier_actions[0].where_filed }
      - "earlier_actions_filer1": ${ earlier_actions[0].who_filed }
      - "earlier_actions_type1": ${ earlier_actions[0].action_type }
      - "earlier_actions_year_filed1": ${ earlier_actions[0].year_filed }
      - "earlier_actions_where_filed2": ${ earlier_actions[1].where_filed }
      - "earlier_actions_filer2": ${ earlier_actions[1].who_filed }
      - "earlier_actions_type2": ${ earlier_actions[1].action_type }
      - "earlier_actions_year_filed2": ${ earlier_actions[1].year_filed }
      - "earlier_actions_where_filed3": ${ earlier_actions[2].where_filed }
      - "earlier_actions_filer3": ${ earlier_actions_filer[2].who_filed }
      - "earlier_actions_type3": ${ earlier_actions[2].action_type }
      - "earlier_actions_year_filed3": ${ earlier_actions[2].year_filed }
      - "earlier_RFA_no": ${ not earlier_RFA_yes }
      - "earlier_RFA_yes": ${ earlier_RFA_yes }
      - "earlier_RFA_where_filed1": ${ earlier_RFA[0].where_filed }
      - "earlier_RFA_filer1": ${ earlier_RFA[0].who_filed }
      - "earlier_RFA_actions_type1": ${ earlier_RFA[0].action_type }
      - "earlier_RFA_year_filed1": ${ earlier_RFA[0].year_filed }
      - "earlier_RFA_where_filed2": ${ earlier_RFA[1].where_filed }
      - "earlier_RFA_filer2": ${ earlier_RFA[1].who_filed }
      - "earlier_RFA_actions_type2": ${ earlier_RFA[1].action_type }
      - "earlier_RFA_year_filed2": ${ earlier_RFA[1].year_filed }
      - "earlier_RFA_where_filed3": ${ earlier_RFA[2].where_filed }
      - "earlier_RFA_filer3": ${ earlier_RFA[2].who_filed }
      - "earlier_RFA_actions_type3": ${ earlier_RFA[2].action_type }
      - "earlier_RFA_year_filed3": ${ earlier_RFA[2].year_filed }
      - "defendant_military_service": ${ military["other_parties1_military"] }
      - "defendant_no_military_service": ${ not military["other_parties1_military"] }
      - "plaintiff_military_service": ${ military["plaintiff_military_service"] }
      - "plaintiff_no_military_service": ${ not military["plaintiff_military_service"] }
      - "divorce_decree": ${ grant_for == "divorce" }
      - "legal_separation_decree": ${ grant_for == "legal_separation" }
      - "dissolution_decree": ${ grant_for == "dissolution" }
      - "property_maintenance": ${ property_maintenance }
      - "spousal_maintenancee": ${ spousal_maintenance }
      - "court_costs": ${ court_costs }
      - "attorney_fees": ${ attorney_fees }
      - "name_change": ${ name_change }
      - "plaintiff_former_name": ${ plaintiff_former_name }
      - "written_agreement_attached": ${ written_agreement_attached }
      # It's a signature: test which file version this is; leave empty unless it's the final version)
      - "signature_date1": ${ signature_date }
---      
attachment:
  name: Health record civil union
  filename: Health_record_civil_union
  variable name: Health_record_civil_union_attachment[i]
  skip undefined: True
  pdf template file: Health_record_civil_union.pdf
  fields:
      - "docket_number": ${ docket_number }
      - "users1_name": ${ users[0] }
      - "users1_former_name": ${ users[0].last_name_former }
      - "users1_sex": ${ users[0].sex }
      - "users1_birth_month": ${ format_date(users[0].birthdate, format='M') }
      - "users1_birth_day": ${ format_date(users[0].birthdate, format='dd') }
      - "users1_birth_year": ${ format_date(users[0].birthdate, format='yyyy') }
      - "users1_address_state": ${ users[0].address.state }
      - "users1_address_city": ${ users[0].address.city }
      - "other_parties1_name": ${ other_parties[0].name }
      - "other_parties1_sex": ${ other_parties[0].sex }
      - "users1_attorneys_address": |
          % if defined("user_has_attorney") and user_has_attorney:
          ${ users[0].attorneys[0].address.on_one_line() }
          % endif
      - "users1_attorneys_name": |
          % if defined("user_has_attorney") and user_has_attorney:
          ${ users1_attorneys_name }
          % endif
      - "users1_attorneys_phone_numer": |
          % if defined("user_has_attorney") and user_has_attorney:
          ${ users1_attorneys_phone_number }
          % endif
      - "other_parties1_former_name": ${ other_parties[0].last_name_former }
      - "other_parties1_birth_month": ${ format_date(other_parties[0].birthdate, format='M') }
      - "other_parties1_birth_day": ${ format_date(other_parties[0].birthdate, format='dd') }
      - "other_parties1_birth_year": ${ format_date(other_parties[0].birthdate, format='yyyy') }
      - "other_parties1_address_state": ${ other_parties[0].address.state }
      - "other_parties1_address_city": ${ other_parties[0].address.city }
      - "civil_union_state": ${ civil_union_state }
      - "civil_union_city": ${ civil_union_city }
      - "civil_union_date_month": ${ format_date(civil_union_date, format='M') }
      - "civil_union_date_day": ${ format_date(civil_union_date, format='dd') }
      - "civil_union_date_year": ${ format_date(civil_union_date, format='yyyy') }
      - "minor_children_number": ${ minor_children_number }
      - "separation_date_month": ${ format_date(no_longer_living_together_date, format='M') }
      - "separation_date_day": ${ format_date(no_longer_living_together_date, format='dd') }
      - "separation_date_year": ${ format_date(no_longer_living_together_date, format='yyyy') }
      - "no_attorney_involved": |
          % if defined("user_has_attorney") and not user_has_attorney:
          ${ True }
          % endif

---
attachment:
  name: Health record divorce annulment
  filename: Health_record_divorce_annulment
  variable name: Health_record_divorce_annulment_attachment[i]
  skip undefined: True
  pdf template file: Health_record_divorce_annulment.pdf
  fields:
      - "docket_number": ${ docket_number }
      - "users1_name": ${ users[0] }
      - "users1_former_name": ${ users[0].last_name_former }
      - "users_role": True
      - "users1_role_husband": ${ users_role == "husband" }
      - "users1_role_wife": ${ users_role == "wife" }
      - "users1_role_spouse": ${ users_role == "spouse" }
      - "other_parties_role": True
      - "other_parties1_role_husband": ${ other_parties_role == "husband" }
      - "other_parties1_role_wife": ${ other_parties_role == "wife" }
      - "other_parties1_role_spouse": ${ other_parties_role == "spouse" }
      - "users[0].gender": True
      - "users1_gender_female": ${ users[0].gender == "female" }
      - "users1_gender_male": ${ users[0].gender == "male" }
      - "other_parties[0].gender": True
      - "other_parties1_gender_female": ${ other_parties[0].gender == "female" }
      - "other_parties1_gender_male": ${ other_parties[0].gender == "male" }
      - "users1_birth_month": ${ format_date(users[0].birthdate, format='M') }
      - "users1_birth_day": ${ format_date(users[0].birthdate, format='dd') }
      - "users1_birth_year": ${ format_date(users[0].birthdate, format='yyyy') }
      - "users1_address_state": ${ users[0].address.state }
      - "users1_address_city": ${ users[0].address.city }
      - "other_parties1_name": ${ other_parties[0].name }
      - "other_parties1_sex": ${ other_parties[0].sex }
      - "users1_attorneys_address": |
          % if defined("user_has_attorney") and user_has_attorney:
          ${ users[0].attorneys[0].address.on_one_line() }
          % endif
      - "users1_attorneys_name": |
          % if defined("user_has_attorney") and user_has_attorney:
          ${ users1_attorneys_name }
          % endif
      - "other_parties1_former_name": ${ other_parties[0].last_name_former }
      - "other_parties1_birth_month": ${ format_date(other_parties[0].birthdate, format='M') }
      - "other_parties1_birth_day": ${ format_date(other_parties[0].birthdate, format='dd') }
      - "other_parties1_birth_year": ${ format_date(other_parties[0].birthdate, format='yyyy') }
      - "other_parties1_address_state": ${ other_parties[0].address.state }
      - "other_parties1_address_city": ${ other_parties[0].address.city }
      - "marriage_state": ${ marriage_state }
      - "marriage_city": ${ marriage_city }
      - "marriage_date_month": ${ format_date(marriage_date, format='M') }
      - "marriage_date_day": ${ format_date(marriage_date, format='dd') }
      - "marriage_date_year": ${ format_date(marriage_date, format='yyyy') }
      - "minor_children_number": ${ minor_children_number }
      - "separation_date_month": ${ format_date(no_longer_living_together_date, format='M') }
      - "separation_date_day": ${ format_date(no_longer_living_together_date, format='dd') }
      - "separation_date_year": ${ format_date(no_longer_living_together_date, format='yyyy') }
      - "no_attorney_involved": |
          % if defined("user_has_attorney") and not user_has_attorney:
          ${ True }
          % endif

